{
	"name": "PL_ingest_bronze_weather_data",
	"properties": {
		"activities": [
			{
				"name": "Lookup Read Weather Metadata Files",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Set variable weather_end_date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "DS_ADLS_JSON_WEATHER_META_DATA",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach Iterate Weather Metadata",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Lookup Read Weather Metadata Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lookup Read Weather Metadata Files').output.value",
						"type": "Expression"
					},
					"batchCount": 50,
					"activities": [
						{
							"name": "Copy data weather details",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"additionalColumns": [
										{
											"name": "Market_name",
											"value": {
												"value": "@item().market_name",
												"type": "Expression"
											}
										}
									],
									"storeSettings": {
										"type": "HttpReadSettings",
										"requestMethod": "GET"
									},
									"formatSettings": {
										"type": "JsonReadSettings"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "DS_HTTP_SOURCE_WEATHER_DATA",
									"type": "DatasetReference",
									"parameters": {
										"dst_prm_relative_URL": {
											"value": "@concat('v1/archive?latitude=',item().latitude,'&longitude=',item().longitude,'&start_date=',variables('pln_var_weather_start_date'),'&end_date=',variables('pln_var_weather_end_date'),'&daily=weather_code,temperature_2m_max,temperature_2m_min,rain_sum&timezone=auto\r\n')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_ADLS_BRONZE_WEATHER_DATA",
									"type": "DatasetReference",
									"parameters": {
										"dst_prm_datalake_container_name": {
											"value": "@item().datalake_container_name",
											"type": "Expression"
										},
										"dst_prm_datalake_folder_name": {
											"value": "@concat(item().datalake_folder_name,'/',variables('pln_var_weather_month'))",
											"type": "Expression"
										},
										"dst_prm_datalake_file_name": {
											"value": "@concat(item().market_name,'.',pipeline().parameters.pln_prm_sink_output_format)",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Set variable weather_start_date",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set variable weather month",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "pln_var_weather_start_date",
					"value": {
						"value": "@formatDateTime(pipeline().parameters.pln_prm_weather_start_date,'yyyy-MM-dd')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable weather_end_date",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Set variable weather_start_date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "pln_var_weather_end_date",
					"value": {
						"value": "@formatDateTime(pipeline().parameters.pln_prm_weather_end_date,'yyyy-MM-dd')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Set variable weather month",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "pln_var_weather_month",
					"value": {
						"value": "@formatDateTime(pipeline().parameters.pln_prm_weather_start_date,'yyyyMM')",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"pln_prm_weather_start_date": {
				"type": "string"
			},
			"pln_prm_weather_end_date": {
				"type": "string"
			},
			"pln_prm_sink_output_format": {
				"type": "string",
				"defaultValue": "json"
			}
		},
		"variables": {
			"pln_var_weather_start_date": {
				"type": "String"
			},
			"pln_var_weather_end_date": {
				"type": "String"
			},
			"pln_var_weather_month": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Ingest"
		},
		"annotations": [],
		"lastPublishTime": "2024-02-03T21:11:20Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}